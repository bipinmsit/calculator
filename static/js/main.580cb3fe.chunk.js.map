{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","result","setresult","inputRef","useRef","useEffect","current","focus","handlClick","e","concat","target","name","backspace","slice","clear","calculate","eval","toString","error","className","type","value","ref","id","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+eAEMA,IAAM,SAANA,MAAa,IAAD,UACcC,oDAAS,IADvB,uMACPC,OADO,cACCC,UADD,cAERC,SAAWC,kDAAO,MACxBC,sDAAU,WACNF,SAASG,QAAQC,WAGrB,IAAMC,WAAa,SAACC,GAChBP,UAAUD,OAAOS,OAAOD,EAAEE,OAAOC,QAE/BC,UAAY,WACdX,UAAUD,OAAOa,MAAM,GAAI,KAEzBC,MAAQ,WACVb,UAAU,KAERc,UAAY,SAAZA,YACF,IACId,UAAUe,KAAKhB,QAAQiB,YAE3B,MAAMC,OACFjB,UAAU,WAGlB,OACI,kEAAKkB,UAAU,YACX,sGACA,uEACI,oEAAOC,KAAK,OAAOC,MAAOrB,OAAQsB,IAAKpB,YAE3C,kEAAKiB,UAAU,UACX,qEAAQI,GAAG,QAAQC,QAASV,OAA5B,SACA,qEAAQS,GAAG,YAAYC,QAASZ,WAAhC,KACA,qEAAQD,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,KACA,qEAAQgB,GAAG,SAASC,QAAST,WAA7B,aAKDjB,2B,8DCvDf,wDASA2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.580cb3fe.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\n\nconst App = () => {\n    const [result, setresult] = useState(\"\")\n    const inputRef = useRef(null)\n    useEffect(() => {\n        inputRef.current.focus()\n    })\n\n    const handlClick = (e) => {\n        setresult(result.concat(e.target.name))\n    }\n    const backspace = () => {\n        setresult(result.slice(0, -1))\n    }\n    const clear = () => {\n        setresult(\"\")\n    }\n    const calculate = () => {\n        try {\n            setresult(eval(result).toString())\n        }\n        catch(error) {\n            setresult(\"Error\")\n        }\n    }\n    return(\n        <div className=\"calc-app\">\n            <p>copyright ©️ bipinmsit</p>\n            <form>\n                <input type=\"text\" value={result} ref={inputRef} />\n            </form>\n            <div className=\"keypad\" >\n                <button id=\"clear\" onClick={clear} >Clear</button>\n                <button id=\"backspace\" onClick={backspace} >C</button>\n                <button name=\"+\" onClick={handlClick}>+</button>\n                <button name=\"7\" onClick={handlClick}>7</button>\n                <button name=\"8\" onClick={handlClick}>8</button>\n                <button name=\"9\" onClick={handlClick}>9</button>\n                <button name=\"-\" onClick={handlClick}>-</button>\n                <button name=\"4\" onClick={handlClick}>4</button>\n                <button name=\"5\" onClick={handlClick}>5</button>\n                <button name=\"6\" onClick={handlClick}>6</button>\n                <button name=\"*\" onClick={handlClick}>*</button>\n                <button name=\"1\" onClick={handlClick}>1</button>\n                <button name=\"2\" onClick={handlClick}>2</button>\n                <button name=\"3\" onClick={handlClick}>3</button>\n                <button name=\"/\" onClick={handlClick}>/</button>\n                <button name=\"0\" onClick={handlClick}>0</button>\n                <button name=\".\" onClick={handlClick}>.</button>\n                <button id=\"result\" onClick={calculate} >Result</button>\n            </div>\n        </div>\n    )\n}\nexport default App","/* \ncalculator\n*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}